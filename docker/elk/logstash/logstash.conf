input {

    #stdin { }

    beats {
        port => 5044
        #codec => "json"
    }

}

filter {
    ## 丢弃的日志
    if [message] =~ ".*eureka" {
        drop {}
    }
    if [message] =~ ".*?异常日志.*" {
        grok {
            # 异常日志
            match => {
                message => "(?<createTime>\d{4}-\d{2}-\d{2} \d{2}:\d{2}:\d{2},\d{3}) env:%{WORD:env} level:%{WORD:level} logId:(?<logId>.*?) logger:(?<logger>.*?) clientIp:%{IP:clientIp} url:%{URI:url} requestMethod:%{WORD:requestMethod} queryStr:(?<queryStr>\-|.*?) formParam:(?<formParam>.*?) requestBody:(?<requestBody>.*?) userAgent:(?<userAgent>.*?) userId:%{NUMBER:userId} csId:%{NUMBER:csId} os:(?<os>.*?) osVersion:(?<osVersion>.*?) imei:(?<imei>.*?) channel:(?<channel>.*?)\n(?<error>.*)"
            }
            remove_field => ["message"]
        }
    } else if [message] =~ ".*?访问日志.*" {
        grok {
            # 访问日志
            match => {
                message => "(?<createTime>\d{4}-\d{2}-\d{2} \d{2}:\d{2}:\d{2},\d{3}) env:%{WORD:env} level:%{WORD:level} logId:(?<logId>.*?) logger:(?<logger>.*?) clientIp:%{IP:clientIp} url:%{URI:url} requestMethod:%{WORD:requestMethod} queryStr:(?<queryStr>\-|.*?) formParam:(?<formParam>.*?) requestBody:(?<requestBody>.*?) userAgent:(?<userAgent>.*?) userId:%{NUMBER:userId} csId:%{NUMBER:csId} os:(?<os>.*?) osVersion:(?<osVersion>.*?) imei:(?<imei>.*?) channel:(?<channel>.*)"
            }
            remove_field => ["message"]
        }
        # 地理位置解析
        geoip {
            source => "clientIp"
            target => "geoip"
            #add_field => [ "[geoip][coordinates]", "%{[geoip][longitude]}" ]
            #add_field => [ "[geoip][coordinates]", "%{[geoip][latitude]}"  ]
        }
        #mutate {
        #convert => [ "[geoip][coordinates]", "float" ]
        #}
    } else {
        grok {
            # 其它
            match => {
                message => "(?<createTime>\d{4}-\d{2}-\d{2} \d{2}:\d{2}:\d{2},\d{3}) env:%{WORD:env} level:%{WORD:level} logId:(?<logId>.*?) logger:(?<logger>.*?)(?<msg>.*)"
            }
            remove_field => ["message"]
        }
    }
    date {
        match => ["createTime", "yyyy-MM-dd HH:mm:ss,SSS"]
        target => "@timestamp"
    }

    ## 丢弃的日志
    if [logId] == "" {
        drop {}
    }

    grok {
        # 修改数据来源
        match => {
            source => "(?<createTime>\d{4}-\d{2}-\d{2} \d{2}:\d{2}:\d{2},\d{3}) env:%{WORD:env} level:%{WORD:level} logId:(?<logId>.*?) logger:(?<logger>.*?) clientIp:%{IP:clientIp} url:%{URI:url} requestMethod:%{WORD:requestMethod} queryStr:(?<queryStr>\-|.*?) formParam:(?<formParam>.*?) requestBody:(?<requestBody>.*?) userAgent:(?<userAgent>.*?) userId:%{NUMBER:userId} csId:%{NUMBER:csId} os:(?<os>.*?) osVersion:(?<osVersion>.*?) imei:(?<imei>.*?) channel:(?<channel>.*)"
        }
        remove_field => ["message"]
    }
}

output {

    stdout { codec => rubydebug }

    elasticsearch {
        hosts => ["10.10.1.60:9200"]
        index => "logstash-%{env}"
    }
}
